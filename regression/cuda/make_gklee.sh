#!/bin/bash

#set print error e/or time
while getopts eth OPTION; do
	case "${OPTION}" in
		e) PRINT_ERROR=1 ;;
		t) PRINT_TIME=1 ;;
		h) PRINT_HELP=1;;
	esac
done

########EXECUTE###########
#erase temp files
if [ -e tests.log ]; then
	rm tests.log
fi

#generate test cases list
find * -name main.cu | sort | sed 's:main.cu::' > test_cases_list.pm

#start execution
line=0
tcl_lines=`grep -cv '$=' test_cases_list.pm`

INITIAL_EXECUTION_TIMESTAMP=$(date +%s)
while [ $line -lt $tcl_lines ]
do
	path=`cat test_cases_list.pm | head -1`
	if [ "$path" == "" ]; then
		exit
	fi
	sed -i 1d test_cases_list.pm
	
	#temporary out file to results. Result generated by result_gen() in tests.log
	result_temp=`echo $path | rev | cut -d"/" -f2 | rev `
	result_temp=`echo $result_temp"_tmp"`

	result_temp2=`echo $path | rev | cut -d"/" -f2 | rev `
	result_temp2=`echo $result_temp"_tmp"`
	
	echo $path
	/usr/bin/time -otimetmp gklee-nvcc "$path"main.cu &> /dev/null
	TIME=`head -1 timetmp | cut -d" " -f3 | sed 's/elapsed//'`	
	#echo "***********->"$TIME

	/usr/bin/time -otimetmp2 gklee "$path"main &> /dev/null
	TIME2=`head -1 timetmp2 | cut -d" " -f3 | sed 's/elapsed//'`	
	echo "***** $TIME"
	echo "***** $TIME2"
	
	if [ -e "$path"/klee-last/*.err ];then
		cat "$path"/klee-last/*.err | head -3
	else
		echo "SUCCESS"
	fi
	#result_gen $result_temp $path/test.desc $TIME
	line=`expr $line + 1`
done
FINAL_EXECUTION_TIMESTAMP=$(date +%s)

rm timetmp timetmp2 test_cases_list.pm main* trace.log

